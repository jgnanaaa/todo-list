# -*- coding: utf-8 -*-
"""to-do

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Vt5fa6UUoSc49xFEgUQqNkd9sUZOsIuX
"""

# todo.py

todo_list = []

def add_task(task):
    todo_list.append(task)
    print(f'Task "{task}" added!')

def view_tasks():
    if not todo_list:
        print("No tasks found!")
    else:
        print("Todo List:")
        for index, task in enumerate(todo_list):
            print(f"{index + 1}. {task}")

def delete_task(task_number):
    if 0 < task_number <= len(todo_list):
        removed = todo_list.pop(task_number - 1)
        print(f'Task "{removed}" removed!')
    else:
        print("Invalid task number!")

# todo.py

# Initialize an empty list to hold tasks
tasks = []

def add_task(task):
    """Add a new task to the list."""
    tasks.append(task)
    print(f'Task "{task}" added!')

def view_tasks():
    """Display all tasks in the list."""
    if not tasks:
        print("No tasks available.")
    else:
        print("Tasks:")
        for index, task in enumerate(tasks, start=1):
            print(f"{index}. {task}")

def delete_task(task_number):
    """Delete a task by its number."""
    if 0 < task_number <= len(tasks):
        removed_task = tasks.pop(task_number - 1)
        print(f'Task "{removed_task}" removed!')
    else:
        print("Invalid task number.")

def main():
    """Main function to run the to-do list app."""
    while True:
        print("\n1. Add Task")
        print("2. View Tasks")
        print("3. Delete Task")
        print("4. Exit")
        choice = input("Choose an option: ")

        if choice == '1':
            task = input("Enter the task: ")
            add_task(task)
        elif choice == '2':
            view_tasks()
        elif choice == '3':
            task_number = int(input("Enter the task number to delete: "))
            delete_task(task_number)
        elif choice == '4':
            print("Exiting the To-Do List App.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()